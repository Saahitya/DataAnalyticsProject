library(caret)
library(dplyr)
getwd()
#setwd("Desktop/5th-SEM-Stuff/DataAnalytics/")
school_data <- read.csv("School_Data")
head(school_data)
summary(school_data)
prop.table(table(school_data$Pass))
#upsampling based on the Pass variable
up_pass_school_data <- upSample(school_data, factor(school_data$Pass))
up_pass_school_data$X <- NULL
orig_model <- glm(Pass ~ Day1+Day2+Day3+Day4+Day5+Senior+Class_Prefect+Athlete+popularity, family="binomial", data = up_pass_school_data)
#model
summary(orig_model)
confint.default(orig_model)
mod_model <- glm(Pass ~ popularity, family="binomial", data = up_pass_school_data)
#model
summary(mod_model)
confint.default(mod_model)
test_data <- read.csv("Test - Sheet1.csv")
names(test_data)[names(test_data) == "Popularity"] <- "popularity"
predictedY <- predict(orig_model, test_data, type="response")
predictedY
test_data$Pass
happ_train_data <- rbind(happ_data_15, happ_data_16)
happ_data_15["year"] <- 2015
summary(happ_data_15)
happ_data_15 <- read.csv("Data2015.csv")
happ_data_16 <- read.csv("Data2016.csv")
happ_data_17 <- read.csv("Data2017.csv")
summary(happ_data_15)
head(happ_data_15)
happ_data_15["year"] <- 2015
happ_data_16["year"] <- 2016
happ_data_17["year"] <- 2017
total_data <- rbind(happ_data_15, happ_data_16, happ_data_17)
country_count <- group_by(total_data, Country) %>% summarise(count = n())
for(row in 1:nrow(country_count)) {
#country_name <- country_count[row, "Country"]
country_name <- as.character(country_count$Country[row])
#count <- country_count[row, "count"]
count <- as.integer(country_count$count[row])
if(count < 3) {
print(country_name)
happ_data_15<-happ_data_15[!(as.character(happ_data_15$Country) == country_name) ,]
happ_data_16<-happ_data_16[!(as.character(happ_data_16$Country) == country_name) ,]
happ_data_17<-happ_data_17[!(as.character(happ_data_17$Country) == country_name) ,]
}
}
rm(country_count)
rm(total_data)
rm(count)
rm(country_name)
rm(row)
happ_train_data <- rbind(happ_data_15, happ_data_16)
linear_model_1 <- lm(Happiness.Score ~ Economy..GDP.per.Capita. + Family +
year + Health..Life.Expectancy., data=happ_train_data)
linear_model_2 <- lm(Happiness.Score ~ Economy..GDP.per.Capita. +
year + Health..Life.Expectancy., data=happ_train_data)
summary(linear_model_1)
summary(linear_model_2)
model_1_pred <- predict(linear_model_1, happ_data_17)
model_2_pred <- predict(linear_model_2, happ_data_17)
print(model_1_pred)
print(model_2_pred)
rms_1 <- sqrt(mean((model_1_pred - happ_data_17$Happiness.Score)^2))
rms_2 <- sqrt(mean((model_2_pred - happ_data_17$Happiness.Score)^2))
print(rms_1)
print(rms_2)
#head(school_data)
#summary(school_data)
prop.table(table(school_data$Pass))
head(school_data)
summary(school_data)
prop.table(table(school_data$Pass))
#upsampling based on the Pass variable
up_pass_school_data <- upSample(school_data, factor(school_data$Pass))
prop.table(table(up_pass_school_data$Pass))
up_pass_school_data$X <- NULL
View(up_pass_school_data)
?confint.default
mod_model <- glm(Pass ~ popularity, family="binomial", data = up_pass_school_data)
#model
summary(mod_model)
confint.default(mod_model)
mod_model <- glm(Pass ~ popularity + Day4 + Athlete, family="binomial", data = up_pass_school_data)
#model
summary(mod_model)
confint.default(mod_model)
test_data <- read.csv("Test - Sheet1.csv")
names(test_data)[names(test_data) == "Popularity"] <- "popularity"
predictedY <- predict(orig_model, test_data, type="response")
predictedY
test_data$Pass
test_data <- read.csv("Test - Sheet1.csv")
names(test_data)[names(test_data) == "Popularity"] <- "popularity"
predicted_orig_Y <- predict(orig_model, test_data, type="response")
predicted_mod_Y <- predict(mod_model, test_data, type="response")
predicted_orig_Y
predicted_mod_Y
test_data$Pass
